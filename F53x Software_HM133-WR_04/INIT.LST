A51 MACRO ASSEMBLER  INIT                                                                 06/27/2022 22:15:57 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN INIT.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE INIT.A51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Copyright (c) 1988-2003 Keil Elektronik GmbH and Keil Software, Inc.
                       5     ;
                       6     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       7     ;------------------------------------------------------------------------------
                       8     ;  INIT.A51:  This code is executed, if the application program contains
                       9     ;             initialized variables at file level.
                      10     ;
                      11     ;  If you are using uVision2, just add the file as last file to your project.
                      12     ;  *** IMPORTANT NOTE ***:  this file needs to be the last file of the linker 
                      13     ;  input list.  If you are using uVision2 this file should be therefore the 
                      14     ;  last file in your project tree.
                      15     ;
                      16     ;
                      17     ;  To translate this file use Ax51 with the following invocation:
                      18     ;
                      19     ;     Ax51 INIT.A51
                      20     ;
                      21     ;  To link the modified INIT.OBJ file to your application use the following
                      22     ;  linker invocation:
                      23     ;
                      24     ;     Lx51 your object file list, INIT.OBJ controls
                      25     ;
                      26     ;------------------------------------------------------------------------------
                      27     ;
                      28     ;  User-defined Watch-Dog Refresh.
                      29     ;
                      30     ;  If the C application contains many initialized variables uses a watchdog
                      31     ;  it might be possible that the user has to include a watchdog refresh into
                      32     ;  the initialization process. The watchdog refresh routine can be included
                      33     ;  in the following MACRO and can alter all CPU registers except
                      34     ;  DPTR.
                      35     ;
  00FE                36     PCA0CPH4                EQU             0xFE
                      37     
                      38     WATCHDOG        MACRO
                      39     ;                MOV            R6,#0xFF
                      40     ;                               MOV             PCA0CPH4,R6                ; Include any Wa
                             tchdog refresh code here
                      41                     ENDM
                      42     ;
                      43     ;------------------------------------------------------------------------------
                      44     ;
                      45     ;<h>  Far Memory Support
                      46     ;
                      47     ;  If the C application contains variables in the far memory space that are
                      48     ;  initialized, you need to set the following define to 1.
                      49     ;
                      50     ; --- Set XBANK = 1 when far variables should be initialized
                      51     ; <q> XBANK: Initialize variables in far memory
                      52     ;          <i>If the C application contains variables in the far memory space that are
                      53     ;          <i>initialized, you need to check this box.
                      54     $set  (XBANK = 0)
                      55     ;
                      56     ;</h>
                      57     ;------------------------------------------------------------------------------
A51 MACRO ASSEMBLER  INIT                                                                 06/27/2022 22:15:57 PAGE     2

                      58     ;
                      59     ;<h>  Dallas 390,400 and 5240 CPU Contiguous Mode
                      60     ;
                      61     ;  If you are using the Dallas Contigious Mode you need to set the following 
                      62     ;  define to 1.
                      63     ;
                      64     ; --- Set DS390 = 1 when CPU runs in Dallas Contigious Mode
                      65     ; <q> DS390: Enable Dallas contiguous mode
                      66     $set  (DS390 = 0)
                      67     ;
                      68     ;</h>
                      69     ;------------------------------------------------------------------------------
                      70     
                      71     ; Standard SFR Symbols
  00E0                72     ACC     DATA    0E0H
  0082                73     DPL     DATA    82H
  0083                74     DPH     DATA    83H
                      75     
                      76                     NAME    ?C_INIT
                      77     
                      78     
                      79     ?C_C51STARTUP   SEGMENT   CODE
                      80     ?C_INITSEG      SEGMENT   CODE          ; Segment with Initializing Data
                      81     
                      82     INIT_IorP       MACRO
                      83     IorPData:                               ; If CY=1 PData Values
                      84                     CLR     A
                      85                     MOVC    A,@A+DPTR
                      86                     INC     DPTR
                      87                     MOV     R0,A            ; Start Address
                      88     IorPLoop:       CLR     A
                      89                     MOVC    A,@A+DPTR
                      90                     INC     DPTR
                      91                     JC      PData
                      92                     MOV     @R0,A
                      93                     SJMP    Common
                      94     PData:          MOVX    @R0,A
                      95     Common:         INC     R0
                      96                     DJNZ    R7,IorPLoop
                      97                     JMP    Loop
                      98                     ENDM
                      99     
                     100     
                     101                     EXTRN CODE (MAIN)
                     102                     PUBLIC  ?C_START
                     103     
----                 104                     RSEG    ?C_C51STARTUP
0000 020000   F      105     INITEND:        LJMP    MAIN
                     106     
                     107     $if  (XBANK = 0)
                     108                     INIT_IorP
                     124     $endif 
                     125     
0015 E4              126     Bits:           CLR     A
0016 93              127                     MOVC    A,@A+DPTR
0017 A3              128                     INC     DPTR
0018 F8              129                     MOV     R0,A
0019 5407            130                     ANL     A,#007H
001B 240C            131                     ADD     A,#Table-LoadTab
001D C8              132                     XCH     A,R0
001E C3              133                     CLR     C       
001F 33              134                     RLC     A               ; Bit Condition to Carry
0020 C4              135                     SWAP    A
0021 540F            136                     ANL     A,#00FH
0023 4420            137                     ORL     A,#20H          ; Bit Address
0025 C8              138                     XCH     A,R0            ; convert to Byte Addressen
A51 MACRO ASSEMBLER  INIT                                                                 06/27/2022 22:15:57 PAGE     3

0026 83              139                     MOVC    A,@A+PC
0027 4004            140     LoadTab:        JC      Setzen
0029 F4              141                     CPL     A
002A 56              142                     ANL     A,@R0
002B 8001            143                     SJMP    BitReady
002D 46              144     Setzen:         ORL     A,@R0
002E F6              145     BitReady:       MOV     @R0,A
002F DFE4            146                     DJNZ    R7,Bits
0031 800B            147                     SJMP    Loop
                     148     
0033 01              149     Table:          DB      00000001B
0034 02              150                     DB      00000010B
0035 04              151                     DB      00000100B
0036 08              152                     DB      00001000B
0037 10              153                     DB      00010000B
0038 20              154                     DB      00100000B
0039 40              155                     DB      01000000B
003A 80              156                     DB      10000000B
                     157                     
                     158     
003B                 159     ?C_START:       
003B 900000   F      160                     MOV     DPTR,#?C_INITSEG
003E                 161     Loop:
                     162                     WATCHDOG
003E E4              165                     CLR     A
003F 7E01            166                     MOV     R6,#1
0041 93              167                     MOVC    A,@A+DPTR
0042 60BC            168                     JZ      INITEND
0044 A3              169                     INC     DPTR
0045 FF              170                     MOV     R7,A
0046 543F            171                     ANL     A,#3FH
0048 30E509          172                     JNB     ACC.5,NOBIG
004B 541F            173                     ANL     A,#01FH
004D FE              174                     MOV     R6,A
004E E4              175                     CLR     A
004F 93              176                     MOVC    A,@A+DPTR
0050 A3              177                     INC     DPTR
0051 6001            178                     JZ      NOBIG
0053 0E              179                     INC     R6
0054 CF              180     NOBIG:          XCH     A,R7
                     181     
                     182     ; ---- Init for far Variables
                     183     
                     184     $if  (DS390)
                             DPX             DATA    93H
                             EXTRN CODE (?C?CODESEG)
                             EXTRN CODE (?C?XDATASEG)
                             $endif 
                     189     
                     190     $if  (XBANK = 1)
                             EXTRN CODE (?C?CSTPTR)
                                             ANL     A,#0E0H
                                             CJNE    A,#0E0H,NOHDATA
                             ;
                             HPTRINIT:       CLR     A
                                             MOVC    A,@A+DPTR
                                             MOV     R3,A
                                             INC     DPTR
                                             CLR     A
                                             MOVC    A,@A+DPTR
                                             MOV     R2,A
                                             INC     DPTR
                                             CLR     A
                                             MOVC    A,@A+DPTR
                                             MOV     R1,A
                                             INC     DPTR
A51 MACRO ASSEMBLER  INIT                                                                 06/27/2022 22:15:57 PAGE     4

                             HLOOP:          CLR     A
                                             MOVC    A,@A+DPTR
                                             PUSH    DPH
                                             PUSH    DPL
                                             CALL    ?C?CSTPTR
                             $if  (DS390)
                                             MOV     DPX,#BYTE0 (?C?CODESEG)
                             $endif 
                                             POP     DPL
                                             POP     DPH
                                             INC     DPTR
                                             INC     R1
                                             MOV     A,R1
                                             JNZ     HINC
                                             INC     R2
                             HINC:           DJNZ    R7,HLOOP
                                             DJNZ    R6,HLOOP
                                             SJMP    Loop
                             NOHDATA:
                             $endif 
0055 54C0            227                     ANL     A,#0C0H         ; Typ is in Bit 6 and Bit 7
0057 25E0            228                     ADD     A,ACC
0059 60A8            229                     JZ      IorPData
005B 40B8            230                     JC      Bits
                     231     
005D E4              232     XdataMem:       CLR     A
005E 93              233                     MOVC    A,@A+DPTR
005F A3              234                     INC     DPTR
0060 FA              235                     MOV     R2,A            ; High
0061 E4              236                     CLR     A
0062 93              237                     MOVC    A,@A+DPTR
0063 A3              238                     INC     DPTR
0064 F8              239                     MOV     R0,A            ; LOW
0065 E4              240     XLoop:          CLR     A
0066 93              241                     MOVC    A,@A+DPTR
0067 A3              242                     INC     DPTR
0068 C8              243                     XCH     A,R0
0069 C582            244                     XCH     A,DPL
006B C8              245                     XCH     A,R0
006C CA              246                     XCH     A,R2
006D C583            247                     XCH     A,DPH
006F CA              248                     XCH     A,R2
                     249     $if  (DS390)
                                             MOV     DPX,#BYTE0 (?C?XDATASEG)
                             $endif 
0070 F0              252                     MOVX    @DPTR,A
                     253     $if  (DS390)
                                             MOV     DPX,#BYTE0 (?C?CODESEG)
                             $endif 
0071 A3              256                     INC     DPTR
0072 C8              257                     XCH     A,R0
0073 C582            258                     XCH     A,DPL
0075 C8              259                     XCH     A,R0
0076 CA              260                     XCH     A,R2
0077 C583            261                     XCH     A,DPH
0079 CA              262                     XCH     A,R2
007A DFE9            263                     DJNZ    R7,XLoop
007C DEE7            264                     DJNZ    R6,XLoop
007E 80BE            265                     SJMP    Loop
                     266     
                     267     $if  (XBANK = 1)
                                             INIT_IorP
                             $endif 
                     270     
----                 271                     RSEG    ?C_INITSEG
0000 00              272                     DB      0
A51 MACRO ASSEMBLER  INIT                                                                 06/27/2022 22:15:57 PAGE     5

                     273     
                     274     ;-------------------------------------------------------------------------
                     275     ; STRUCTURE OF THE INITIALIZATION INFORMATION
                     276     ; -------------------------------------------
                     277     ; This section describes the initialization data generated by C51 for
                     278     ; explicit variable initializations (in segment ?C_INITSEC).
                     279     ;
                     280     ; Explicit variable initilizations at C source level are stored by C51 in
                     281     ; the segment ?C_INITSEC.  All partial segments are combined at linker level
                     282     ; to one segment.  The segment end value DB 0 is taken from this library module
                     283     ; INIT.A51.
                     284     ;
                     285     ; Structure of the ?C_INITSEC information:
                     286     ;     Info (see below) [BYTE]                      ----+  repeated
                     287     ;     additional info  [BYTES depend on Info]      ----+  repeated
                     288     ;     0x00             [BYTE]   end of list mark
                     289     ;
                     290     ;  Info has the following format:
                     291     ;
                     292     ;  Bit      7  6  5  4  3  2  1  0
                     293     ;  Info   T  T  B  L  L  L  L  L    T=Type  B=BIGBIT  L=LENGTH
                     294     ;
                     295     ;  If BIGBIT is set, another LENGTH BYTE FOLLOWS.  The LENGTH
                     296     ;  info of the first byte is then the HIGH part.
                     297     ;
                     298     ;  Typ is one of the following:
                     299     ;  0  := IDATA init values;  the following bytes follow:
                     300     ;        -  1 byte address
                     301     ;        -  init data bytes according LENGTH specification
                     302     ;
                     303     ;  1  := XDATA init values;  the following bytes follow:
                     304     ;        -  2 byte address (high byte first)
                     305     ;        -  init data bytes according LENGTH specification
                     306     ;
                     307     ;  2  := PDATA init values;  the following bytes follow:
                     308     ;        -  1 byte address
                     309     ;        -  init data bytes according LENGTH specification
                     310     ;
                     311     ;  3, BIGBIT=0  := BIT init values; the followign bytes follow:
                     312     ;        -  1 byte for each bit according LENGTH specification
                     313     ;           this byte has the following format:
                     314     ;
                     315     ;           Bit    7  6  5  4  3  2  1  0
                     316     ;                  I  B  B  B  B  B  B  B   I := state of the bit
                     317     ;                                           B := bit address
                     318     ;
                     319     ;  3, BIGBIT=1  := HDATA init values;   the following bytes follow:
                     320     ;        -  another LENGTH byte (since BIGBIT is always 1)
                     321     ;        -  3 byte address  (MSB first)
                     322     ;        -  data bytes according LENGTH specification
                     323     ;
                     324     ;----------------------------------------------------------------------
                     325     
                     326                     END
                             
A51 MACRO ASSEMBLER  INIT                                                                 06/27/2022 22:15:57 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C_C51STARTUP. . .  C SEG    0080H       REL=UNIT
?C_INIT. . . . . .  N NUMB   -----       
?C_INITSEG . . . .  C SEG    0001H       REL=UNIT
?C_START . . . . .  C ADDR   003BH   R   SEG=?C_C51STARTUP
ACC. . . . . . . .  D ADDR   00E0H   A   
BITREADY . . . . .  C ADDR   002EH   R   SEG=?C_C51STARTUP
BITS . . . . . . .  C ADDR   0015H   R   SEG=?C_C51STARTUP
COMMON . . . . . .  C ADDR   0010H   R   SEG=?C_C51STARTUP
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
INITEND. . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP
IORPDATA . . . . .  C ADDR   0003H   R   SEG=?C_C51STARTUP
IORPLOOP . . . . .  C ADDR   0007H   R   SEG=?C_C51STARTUP
LOADTAB. . . . . .  C ADDR   0027H   R   SEG=?C_C51STARTUP
LOOP . . . . . . .  C ADDR   003EH   R   SEG=?C_C51STARTUP
MAIN . . . . . . .  C ADDR   -----       EXT
NOBIG. . . . . . .  C ADDR   0054H   R   SEG=?C_C51STARTUP
PCA0CPH4 . . . . .  N NUMB   00FEH   A   
PDATA. . . . . . .  C ADDR   000FH   R   SEG=?C_C51STARTUP
SETZEN . . . . . .  C ADDR   002DH   R   SEG=?C_C51STARTUP
TABLE. . . . . . .  C ADDR   0033H   R   SEG=?C_C51STARTUP
XDATAMEM . . . . .  C ADDR   005DH   R   SEG=?C_C51STARTUP
XLOOP. . . . . . .  C ADDR   0065H   R   SEG=?C_C51STARTUP


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
